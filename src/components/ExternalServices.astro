---
import type { ExternalService } from '../data/external-services';
import { externalServices } from '../data/external-services';
const { heading = 'Layanan Eksternal', description, variant = 'default' } = Astro.props as {
  heading?: string;
  description?: string;
  variant?: 'default' | 'compact';
};
const iconMap = import.meta.glob('../../public/icons/*.svg', { eager: true, query: '?raw', import: 'default' });
const getIcon = (name: ExternalService['icon']) => iconMap[`../../public/icons/${name}.svg`];
const services = externalServices;
const sectionLabel = variant === 'compact' ? heading : undefined;
---
<section
  class:list={[ 'external-services', variant !== 'default' && 'external-services--compact' ]}
  aria-labelledby={variant === 'compact' ? undefined : 'external-services-heading'}
  aria-label={sectionLabel}
>
  {variant === 'default' && (
    <div class="external-services__intro">
      <h2 id="external-services-heading">{heading}</h2>
      {description ? <p>{description}</p> : <p>Akses cepat ke layanan resmi pemerintah dan madrasah.</p>}
    </div>
  )}
  <ul class="external-services__grid" role="list">
    {services.map((service) => (
      <li class="external-services__item">
        <a
          class="external-services__link"
          href={service.href}
          target="_blank"
          rel="noopener noreferrer"
          aria-label={service.ariaLabel}
        >
          <span class="external-services__icon" aria-hidden="true">
            <span set:html={getIcon(service.icon) ?? `<span class='icon-fallback'>${service.name[0]}</span>`}></span>
          </span>
          <span class="external-services__body">
            <span class="external-services__title">{service.name}</span>
            {variant === 'default' && <span class="external-services__desc">{service.description}</span>}
          </span>
        </a>
      </li>
    ))}
  </ul>
</section>
<style>
  .external-services {
    margin: clamp(2rem, 6vw, 4rem) auto;
    padding: clamp(1.5rem, 5vw, 2.5rem);
    border-radius: 1.75rem;
    background: rgba(243, 255, 229, 0.85);
    box-shadow: 0 20px 45px rgba(15, 41, 16, 0.12);
    backdrop-filter: blur(12px);
  }

  .external-services__intro {
    display: grid;
    gap: 0.75rem;
    margin-bottom: clamp(1.25rem, 3vw, 2rem);
  }

  .external-services__intro h2 {
    font-size: clamp(1.4rem, 3vw, 2rem);
    margin: 0;
    color: #12461c;
  }

  .external-services__intro p {
    margin: 0;
    color: rgba(15, 41, 16, 0.75);
    max-width: 52ch;
  }

  .external-services__grid {
    list-style: none;
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: clamp(0.85rem, 3vw, 1.5rem);
    padding: 0;
    margin: 0;
  }

  @media (min-width: 480px) {
    .external-services__grid {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (min-width: 992px) {
    .external-services__grid {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }

  .external-services__item {
    display: flex;
  }

  .external-services__link {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    gap: 0.85rem;
    padding: clamp(0.9rem, 3vw, 1.1rem);
    border-radius: 1.5rem;
    background: #ffffff;
    color: #0f2910;
    min-height: 100%;
    box-shadow: inset 0 0 0 1px rgba(46, 125, 50, 0.08);
    transition: transform 200ms ease, box-shadow 200ms ease, background 200ms ease;
  }

  .external-services__link:hover,
  .external-services__link:focus-visible {
    transform: translateY(-2px);
    background: rgba(243, 255, 229, 0.95);
    box-shadow: inset 0 0 0 2px rgba(0, 166, 166, 0.35), 0 8px 16px rgba(15, 41, 16, 0.18);
  }

  .external-services__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 44px;
    height: 44px;
    border-radius: 1.25rem;
    background: rgba(46, 125, 50, 0.12);
    color: #12461c;
  }

  .external-services__icon svg {
    width: 28px;
    height: 28px;
  }

  .icon-fallback {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background: rgba(0, 166, 166, 0.2);
    font-weight: 600;
  }

  .external-services__body {
    display: grid;
    gap: 0.25rem;
  }

  .external-services__title {
    font-weight: 600;
    color: #0f2910;
  }

  .external-services__desc {
    font-size: 0.85rem;
    color: rgba(15, 41, 16, 0.72);
  }

  .external-services--compact {
    background: transparent;
    box-shadow: none;
    padding: 0;
    margin: 0;
  }

  .external-services--compact .external-services__grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 0.5rem;
  }

  .external-services--compact .external-services__link {
    padding: 0.75rem;
    border-radius: 1rem;
    gap: 0.65rem;
  }

  .external-services--compact .external-services__icon {
    width: 36px;
    height: 36px;
    border-radius: 1rem;
  }

  .external-services--compact .external-services__desc {
    display: none;
  }

  @media (min-width: 600px) {
    .external-services--compact .external-services__grid {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (min-width: 1024px) {
    .external-services--compact .external-services__grid {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
</style>
